hello world \
git is a  distributed version controlled system..
git is a  distributed version controlled system..
hi hello heyyy
helllooo
last message
last seen 
Rarely found species....
okay the last one...
programming language
myself nandani 


#include <iostream>
using namespace std;

char board[3][3];
char currentMarker;
int currentPlayer;

void resetBoard() {
    char num = '1';
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            board[i][j] = num++;
        }
    }
}

void printBoard() {
    cout << "\n";
    for (int i = 0; i < 3; i++) {
        cout << " ";
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << "\n";
        if (i < 2) cout << "---|---|---\n";
    }
    cout << "\n";
}

bool placeMarker(int slot) {
    int row = (slot - 1) / 3;
    int col = (slot - 1) % 3;

    if (board[row][col] != 'X' && board[row][col] != 'O') {
        board[row][col] = currentMarker;
        return true;
    }
    return false;
}

int winner() {
    // Check rows and columns
    for (int i = 0; i < 3; i++) {
        if ((board[i][0] == board[i][1] && board[i][1] == board[i][2]) ||
            (board[0][i] == board[1][i] && board[1][i] == board[2][i])) {
            return currentPlayer;
        }
    }

    // Check diagonals
    if ((board[0][0] == board[1][1] && board[1][1] == board[2][2]) ||
        (board[0][2] == board[1][1] && board[1][1] == board[2][0])) {
        return currentPlayer;
    }

    return 0;
}

void switchPlayer() {
    if (currentMarker == 'X') {
        currentMarker = 'O';
        currentPlayer = 2;
    } else {
        currentMarker = 'X';
        currentPlayer = 1;
    }
}

int main() {
    resetBoard();
    currentMarker = 'X';
    currentPlayer = 1;

    int moves = 0;
    int playerWon = 0;

    printBoard();

    while (moves < 9) {
        int slot;
        cout << "Player " << currentPlayer << " (" << currentMarker << "), enter slot (1-9): ";
        cin >> slot;

        if (slot < 1 || slot > 9) {
            cout << "Invalid slot! Try again.\n";
            continue;
        }

        if (!placeMarker(slot)) {
            cout << "Slot already taken! Try again.\n";
            continue;
        }

        printBoard();
        moves++;

        playerWon = winner();
        if (playerWon != 0) {
            cout << "Player " << playerWon << " wins!\n";
            break;
        }

        switchPlayer();
    }

    if (playerWon == 0) {
        cout << "It's a draw!\n";
    }

    return 0;
}
